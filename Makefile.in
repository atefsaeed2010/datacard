PROJM =  chan_datacard.so
PROJS =  chan_datacards.so

chan_datacardm_so_OBJS =  app.o at_command.o at_parse.o at_queue.o at_read.o at_response.o \
	chan_datacard.o channel.o char_conv.o cli.o helpers.o manager.o \
	memmem.o ringbuffer.o cpvt.o dc_config.o

chan_datacards_so_OBJS	= single.o

CC = gcc
LD = gcc
STRIP = strip
RM = rm -f
CHMOD = chmod
INSTALL = install
MAKE_DEPS=-MD -MT $@ -MF .$(subst /,_,$@).d -MP

CFLAGS  += -Wextra -fPIC -DAST_MODULE=\"$(PROJM)\" -D_THREAD_SAFE @INCDIR@ @CFLAGS@
LDFLAGS += @LIBDIR@
LIBS     = @LIBS@
SOLINK   = @SOLINK@

all: $(PROJM)
bundle: $(PROJS)

install: all
	$(STRIP) $(PROJM)
	$(INSTALL) -m 755 $(PROJM) @DESTDIR@

$(PROJM): $(chan_datacardm_so_OBJS) Makefile
	$(LD) $(LDFLAGS) $(SOLINK) -o $@ $(chan_datacardm_so_OBJS) $(LIBS)
	$(CHMOD) 755 $@

$(PROJS): $(chan_datacards_so_OBJS) Makefile
	$(LD) $(LDFLAGS) $(SOLINK) -o $@ $(chan_datacards_so_OBJS) $(LIBS)
	$(CHMOD) 755 $@
	mv $@ chan_datacard.so

.c.o:
	$(CC) $(CFLAGS) $(MAKE_DEPS) -o $@ -c $<

clean:
	$(RM) $(PROJM) $(PROJS) *.o *.core .*.d

Makefile: Makefile.in
	./configure

ifneq ($(wildcard .*.d),)
   include .*.d
endif
